[tool.poetry]
name = "starknet_python_sdk"
version = "0.1.0"
description = ""
authors = ["Tomasz Rejowski <tomasz.rejowski@swmansion.com>", "Jakub Ptak <jakub.ptak@swmansion.com>"]
include = ["starknet"]
exclude = ["starknet/tests/*", "starknet/*_test.py"]
packages = [
    { include = "starknet" }
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/software-mansion/starknet_python_sdk"
documentation = "https://starknet-python-sdk.readthedocs.io"

[tool.poetry.dependencies]
python = "^3.7.12"
cairo-lang = "^0.6.0"
asgiref = "^3.4.1"

[tool.poetry.dev-dependencies]
pytest = "^5.2"
black = "^21.11b0"
poethepoet = "^0.11.0"
coverage = "^6.1.2"
starknet-devnet = "^0.1.9"
pytest-asyncio = "^0.16.0"
Sphinx = "^4.3.1"
sphinx-rtd-theme = "^1.0.0"

[tool.poe.tasks]
test = ["test_unit", "test_e2e"]
test_unit.shell = "coverage run -m pytest starknet --ignore=starknet/tests/e2e"
test_unit.env = { COVERAGE_FILE="unit.coverage" }
test_e2e.shell = "starknet-devnet --host localhost --port 5000 &; DEVNET_PID=$! && sleep 1 && coverage run -m pytest starknet/tests/e2e; kill $DEVNET_PID"
test_e2e.env = { COVERAGE_FILE="e2e.coverage" }
_coverage_combine.shell = "coverage combine unit.coverage e2e.coverage"
test_report = ["_coverage_combine", { shell = "coverage report" }]
test_html = [
    "_coverage_combine",
    { shell = "coverage html && open ./htmlcov/index.html" }
]
docs_create = { shell = "make -C docs html" }
docs_open = { shell = "open docs/_build/html/index.html" }

[tool.coverage.run]
source = ["starknet"]

[tool.coverage.report]
omit = ["*_test.py", "starknet/tests/e2e/*"]
skip_empty = true


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py37"]
