name: Checks

on:
  push:
    branches:
      - master
      - development
  pull_request:

jobs:
  setup:
    name: Download deps, install poetry
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9" ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Install dependencies
        run: |
          poetry install

  lint:
    name: Check lock, formatting, linting and types
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        python-version: [ "3.8", "3.9" ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      # poetry needs to be reinstalled because only commands starting with `poetry` are cached
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Check poetry.lock
        run: |
          poetry lock --check
      - name: Check formatting with black
        run: |
          poetry run poe format_check
      - name: Analysing the code with pylint
        run: |
          poetry run poe lint
      - name: Typechecking
        run: |
          poetry run poe typecheck
      - name: Check if requirements.txt is up-to-date
        run: |
          poetry export -f requirements.txt --without-hashes --extras docs | cmp - requirements.txt

  unit-and-e2e-tests:
    name: Unit and e2e tests
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        python-version: [ "3.8", "3.9" ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Compile contracts
        run: |
          poetry run poe compile_contracts
      - name: Unit & e2e test
        run: |
          poetry run poe test_ci
      - name: Generate coverage in XML
        run: |
          poetry run coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  docs-tests:
    name: Docs tests
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        python-version: [ "3.8", "3.9" ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Compile contracts
        run: |
          poetry run poe compile_contracts
      - name: Docs test
        run: |
          poetry run poe test_ci_docs
      - name: Generate coverage in XML
        run: |
          poetry run coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
