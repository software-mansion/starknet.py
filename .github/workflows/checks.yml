name: format -> lint -> test

on:
  push:
    branches:
      - master
      - development
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Check poetry.lock
      run: |
        poetry lock --check
    - name: Install dependencies
      run: |
        poetry install
    - name: Check formatting with black
      run: |
        poetry run poe format_check
    - name: Analysing the code with pylint
      run: |
        poetry run poe lint
    - name: Typechecking
      run: |
        poetry run poe typecheck
    - name: Check if requirements.txt is up-to-date
      run: |
        poetry export -f requirements.txt --without-hashes --extras docs | cmp - requirements.txt
    - name: Unit & e2e test
      run: |
        poetry run poe test
    - name: Generate coverage in XML
      run: |
        poetry run poe coverage_combine
        poetry run coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
