name: Devnet setup

env:
  DEVNET_SHA: dd559716849ade47cc06be150edf250e5dccb2bf

on:
  workflow_call:

jobs:
  setup-devnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Clone starknet-devnet-rs
        run: |
          git clone https://github.com/0xSpaceShard/starknet-devnet-rs.git starknet-devnet-rs
          pushd ${{ github.workspace }}/starknet-devnet-rs
          git checkout ${{ env.DEVNET_SHA }}
          popd

      - name: Cache devnet build
        uses: actions/cache@v4
        with:
          path: starknet-devnet-rs/target/release
          key: ${{ runner.os }}-starknet-devnet-rs-target-release-${{ env.DEVNET_SHA }}

      - name: Build and Install devnet
        run: |
          DEVNET_INSTALL_DIR="$(git rev-parse --show-toplevel)/starknet_py/tests/e2e/devnet/bin"
          mkdir -p "$DEVNET_INSTALL_DIR"

          if [[ ! -d ${{ github.workspace }}/starknet-devnet-rs/target/release ]]; then
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            export PATH="$HOME/.cargo/bin:$PATH"
            
            pushd ${{ github.workspace }}/starknet-devnet-rs
            cargo build --release
            cp ./target/release/starknet-devnet "$DEVNET_INSTALL_DIR"
            popd
          else
            echo "Found existing starknet-devnet-rs build, skipping compilation."
            cp ${{ github.workspace }}/starknet-devnet-rs/target/release/starknet-devnet "$DEVNET_INSTALL_DIR"
          fi

      - name: Verify devnet installation
        run: |
          DEVNET_INSTALL_DIR="$(git rev-parse --show-toplevel)/starknet_py/tests/e2e/devnet/bin"
          if [[ -x "$DEVNET_INSTALL_DIR/starknet-devnet" ]]; then
            echo "starknet-devnet successfully installed at $DEVNET_INSTALL_DIR"
          else
            echo "starknet-devnet installation failed!" && exit 1
          fi
